buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}";
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+"
    }
}

wrapper {
    gradleVersion = '5.1'
}

allprojects {
    apply plugin: 'base'
    apply plugin: 'jacoco'

    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = '0.8.4'
    }

}

subprojects {
    repositories {
        jcenter()
    }

    group 'it.at7.gemini'
    version '0.2.1'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.9
    targetCompatibility = 1.9

    dependencies {
        compile 'org.jetbrains:annotations:17.0.0'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'org.springframework.security:spring-security-test'
    }

    def jacocoExecutionDataFiles = fileTree(buildDir).include("/jacoco/*.exec")
    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled = true
        }
        executionData.setFrom(jacocoExecutionDataFiles)
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier "sources"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier 'javadoc'
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        publish = true
        pkg {
            repo = 'Gemini'
            name = project.archivesBaseName
            userOrg = user
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/h4t0n/gemini'
        }
        publications = ['geminiModule']
    }

    publishing {
        publications {
            geminiModule(MavenPublication) {
                from components.java
                artifact sourceJar
                artifact javadocJar
                groupId = project.group
                artifactId = project.archivesBaseName
                version = project.version
            }
        }
    }

}

task jacocoRootReport(type: JacocoReport) {
    dependsOn subprojects.jacocoTestReport
    reports {
        xml.enabled = true
    }
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom files(subprojects.jacocoTestReport.executionData)
}